plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.17.2",
    selenideVersion = "6.3.4",
    junitVersion = "5.8.2",
    ownerVersion = "1.0.12",
    seleniumVersion = "3.141.59",
    slf4jVersion = "1.7.32"
allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
dependencies {
    // implementation 'io.github.bonigarcia:webdrivermanager:5.1.0'
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:3.22.0",
            "io.github.bonigarcia:webdrivermanager:5.1.0",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion"
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}